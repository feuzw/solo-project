# server
server:
  port: 8080

# jdbc
spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/JPAREACTTEST
    username: root
    password: 12345678
  mongodb:
    uri: mongodb://localhost:27017/solo

  main:
    allow-bean-definition-overriding: true


  mvc:
    hiddenmethod:
      filter:
        enabled: true
  # jpa
  jpa:
    hibernate:
      ddl-auto: update

    # jpa format
    properties:
      hibernate:
        format_sql: true
    show-sql: true

  # log
  output:
    ansi:
      enabled: always

  security:
    oauth2:
      client:
        registration:
          naver:
            client-name: Naver
            client-id: UFGOw6CnDfjpewOTiGT4
            client-secret: WMg2FL_TR1
            redirect-uri: http://localhost:8080/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            scope: name, email, mobile

          kakao:
            client-name: kakao
            client-id: b7407fed37c117dbed7c5158fbe0d8d0
            client-secret: adDDoZRH9aDSE05rqSZ3qkSxbtV0bTiJ
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao
            client-authentication-method: POST
            authorization-grant-type: authorization_code
            scope: account_email,profile_nickname, profile_image

          google:
            client-name: google
            client-id: 376849172025-ull8317cbum5dbc0nm38cc356qr2h8jb.apps.googleusercontent.com
            client-secret: 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
            redirect-uri: http://localhost:8080/login/oauth2/code/google
            client-authentication-method: POST
            authorization-grant-type: authorization_code
            scope: email, profile

        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: kakao_account

# HS512 알고리즘을 사용할 것이기 때문에 512bit, 즉 64byte 이상의 secret key를 사용해야 한다.
# Secret 값은 특정 문자열을 Base64 로 인코딩한 값 사용 (아래 명령어를 터미널에 쳐보면 그대로 나옴)
# $ echo 'spring-boot-security-jwt-tutorial-jiwoon-spring-boot-security-jwt-tutorial' | base64
jwt:
  secret: c3ByaW5nLWJvb3Qtc2VjdXJpdHktand0LXR1dG9yaWFsLWppd29vbi1zcHJpbmctYm9vdC1zZWN1cml0eS1qd3QtdHV0b3JpYWwK
